from io import BytesIO
from typing import Any, Iterator, Optional

from botocore import ScalarTypes as ScalarTypes
from botocore import parsers as parsers
from botocore.exceptions import IncompleteReadError as IncompleteReadError
from botocore.exceptions import ReadTimeoutError as ReadTimeoutError
from botocore.hooks import first_non_none_response as first_non_none_response

class StreamingBody:
    def __init__(self, raw_stream: BytesIO, content_length: int) -> None: ...
    def set_socket_timeout(self, timeout: int) -> None: ...
    def read(self, amt: Optional[int] = ...) -> bytes: ...
    def __iter__(self) -> Iterator[bytes]: ...
    def __next__(self) -> bytes: ...
    next = __next__
    def iter_lines(self, chunk_size: int = ..., keepends: bool = ...) -> None: ...
    def iter_chunks(self, chunk_size: int = ...) -> Iterator[bytes]: ...
    def close(self) -> None: ...

def get_response(operation_model: Any, http_response: Any) -> Any: ...
